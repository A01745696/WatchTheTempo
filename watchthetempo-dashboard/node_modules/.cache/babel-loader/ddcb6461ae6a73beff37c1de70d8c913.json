{"ast":null,"code":"import _asyncToGenerator from\"/home/facebooker/programming/Javascript/React/watch-the-tempo-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/facebooker/programming/Javascript/React/watch-the-tempo-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/facebooker/programming/Javascript/React/watch-the-tempo-dashboard/node_modules/@babel/runtime/regenerator/index.js\";import{useState}from'react';import{createUserWithEmailAndPassword,onAuthStateChanged}from'firebase/auth';import{auth}from'./firebase-config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Register=function Register(){//Hooks to set email, password and user\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),pssw=_useState4[0],setPssw=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),user=_useState6[0],setUser=_useState6[1];//Checks if user is authenticated and changes route\nif(auth.currentUser){window.location.href='/dashboard';}//Check if user changed and update it\nonAuthStateChanged(auth,function(currentUser){if(currentUser){setUser(currentUser);}});//Register user when entering email and password\nfunction register(){return _register.apply(this,arguments);}function _register(){_register=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return createUserWithEmailAndPassword(auth,email,pssw).then(function(){logData();});case 3:_context2.next=7;break;case 5:_context2.prev=5;_context2.t0=_context2[\"catch\"](0);case 7:;case 8:case\"end\":return _context2.stop();}}},_callee2,null,[[0,5]]);}));return _register.apply(this,arguments);};//fetch function to post email and password from user\nvar logData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://fetch request from local API on port 5000\nfetch(\"http://watchthetempo.games:5000/post\",{method:\"POST\",headers:{'Accept':'application/json',\"Content-Type\":\"application/json\"//Header to specify JSON format\n},body:JSON.stringify({usuario:auth.currentUser.email,//get user email from currentUser\npassword:auth.currentUser.uid,//get UID from currentUser\nfecha:'test'})});case 1:case\"end\":return _context.stop();}}},_callee);}));return function logData(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Ingresa tu e-mail\",onChange:function onChange(event){setEmail(event.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Ingresa una password\",onChange:function onChange(event){setPssw(event.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:register,children:\"Register User\"})]});};export default Register;","map":{"version":3,"sources":["/home/facebooker/programming/Javascript/React/watch-the-tempo-dashboard/src/pages/register.js"],"names":["useState","createUserWithEmailAndPassword","onAuthStateChanged","auth","Register","email","setEmail","pssw","setPssw","user","setUser","currentUser","window","location","href","register","then","logData","fetch","method","headers","body","JSON","stringify","usuario","password","uid","fecha","event","target","value"],"mappings":"0dAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,8BAAT,CAAyCC,kBAAzC,KAAmE,eAAnE,CACA,OAASC,IAAT,KAAqB,mBAArB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAW,CAE1B;AACA,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAAwBN,QAAQ,CAAC,EAAD,CAAhC,yCAAOO,IAAP,eAAaC,OAAb,eACA,eAAwBR,QAAQ,CAAC,EAAD,CAAhC,yCAAOS,IAAP,eAAaC,OAAb,eAEA;AACA,GAAGP,IAAI,CAACQ,WAAR,CAAqB,CACnBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqB,YAArB,CACD,CAED;AACAZ,kBAAkB,CAACC,IAAD,CAAO,SAACQ,WAAD,CAAiB,CACtC,GAAGA,WAAH,CAAgB,CACdD,OAAO,CAACC,WAAD,CAAP,CACD,CACJ,CAJiB,CAAlB,CAMA;AAnB0B,QAoBXI,CAAAA,QApBW,kIAoB1B,gLAEUd,CAAAA,8BAA8B,CAACE,IAAD,CAAOE,KAAP,CAAcE,IAAd,CAA9B,CAAkDS,IAAlD,CAAuD,UAAM,CAACC,OAAO,GAAI,CAAzE,CAFV,iGAGkB,CAHlB,qEApB0B,2CAwBzB,CAED;AACA,GAAMA,CAAAA,OAAO,0FAAG,mIACZ;AACAC,KAAK,CAAC,sCAAD,CAAyC,CAC5CC,MAAM,CAAE,MADoC,CAE5CC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAAkB;AAF3B,CAFmC,CAM5CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACrBC,OAAO,CAAErB,IAAI,CAACQ,WAAL,CAAiBN,KADL,CACW;AAChCoB,QAAQ,CAAEtB,IAAI,CAACQ,WAAL,CAAiBe,GAFN,CAEU;AAC/BC,KAAK,CAAE,MAHc,CAAf,CANsC,CAAzC,CAAL,CAFY,sDAAH,kBAAPV,CAAAA,OAAO,0CAAb,CAgBA,mBACE,oCACE,cAAO,WAAW,CAAC,mBAAnB,CAAuC,QAAQ,CAAE,kBAACW,KAAD,CAAW,CAC1DtB,QAAQ,CAACsB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR,CACD,CAFD,EADF,cAGa,aAHb,cAGkB,aAHlB,cAIE,cAAO,IAAI,CAAC,UAAZ,CAAuB,WAAW,CAAC,sBAAnC,CAA0D,QAAQ,CAAE,kBAACF,KAAD,CAAW,CAC7EpB,OAAO,CAACoB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CACD,CAFD,EAJF,cAMa,aANb,cAMkB,aANlB,cAOE,eAAQ,OAAO,CAAEf,QAAjB,2BAPF,GADF,CAWD,CAtDD,CAwDA,cAAeX,CAAAA,QAAf","sourcesContent":["import { useState } from 'react';\nimport { createUserWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './firebase-config';\n\nconst Register = function() {\n\n  //Hooks to set email, password and user\n  const [email, setEmail] = useState('');\n  const [pssw, setPssw] = useState('');\n  const [user, setUser] = useState({});\n\n  //Checks if user is authenticated and changes route\n  if(auth.currentUser) {\n    window.location.href='/dashboard'\n  }\n\n  //Check if user changed and update it\n  onAuthStateChanged(auth, (currentUser) => {\n      if(currentUser) {\n        setUser(currentUser);\n      }\n  });\n\n  //Register user when entering email and password\n  async function register() {\n    try {\n      await createUserWithEmailAndPassword(auth, email, pssw).then(() => {logData();});\n    } catch(error){};\n  };\n\n  //fetch function to post email and password from user\n  const logData = async () => {\n      //fetch request from local API on port 5000\n      fetch(\"http://watchthetempo.games:5000/post\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          \"Content-Type\": \"application/json\"//Header to specify JSON format\n        },\n        body: JSON.stringify({\n        usuario: auth.currentUser.email,//get user email from currentUser\n        password: auth.currentUser.uid,//get UID from currentUser\n        fecha: 'test'\n      })\n      });\n  };\n\n  return (\n    <div>\n      <input placeholder=\"Ingresa tu e-mail\" onChange={(event) => {\n        setEmail(event.target.value);\n      }}></input><br/><br/>\n      <input type=\"password\" placeholder=\"Ingresa una password\" onChange={(event) => {\n        setPssw(event.target.value);\n      }}></input><br/><br/>\n      <button onClick={register}>Register User</button>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}