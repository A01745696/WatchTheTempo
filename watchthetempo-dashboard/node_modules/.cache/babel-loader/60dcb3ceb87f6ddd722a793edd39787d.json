{"ast":null,"code":"var _jsxFileName = \"/home/facebooker/programming/Javascript/React/watch-the-tempo-dashboard/src/pages/register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { createUserWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './firebase-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = function () {\n  _s();\n\n  //Hooks to set email, password and user\n  const [email, setEmail] = useState('');\n  const [pssw, setPssw] = useState('');\n  const [user, setUser] = useState({}); //Checks if user is authenticated and changes route\n\n  if (auth.currentUser) {\n    window.location.href = '/dashboard';\n  } //Check if user changed and update it\n\n\n  onAuthStateChanged(auth, currentUser => {\n    if (currentUser) {\n      setUser(currentUser);\n    }\n  }); //Register user when entering email and password\n\n  async function register() {\n    try {\n      await createUserWithEmailAndPassword(auth, email, pssw).then(() => {\n        logData();\n      });\n    } catch (error) {}\n\n    ;\n  }\n\n  ; //fetch function to post email and password from user\n\n  const logData = async () => {\n    //fetch request from local API on port 5000\n    fetch(\"http://127.0.0.1:5000/post\", {\n      //fetch(\"http://64.227.109.201/phpmyadmin/logData.php\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\" //Header to specify JSON format\n\n      },\n      body: JSON.stringify({\n        username: auth.currentUser.email,\n        //get user email from currentUser\n        password: auth.currentUser.uid //get UID from currentUser\n\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Ingresa tu e-mail\",\n      onChange: event => {\n        setEmail(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Ingresa una password\",\n      onChange: event => {\n        setPssw(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: register,\n      children: \"Register User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"yI6qx9xKfFiSE/E1EeewsZHyhfo=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/facebooker/programming/Javascript/React/watch-the-tempo-dashboard/src/pages/register.js"],"names":["useState","createUserWithEmailAndPassword","onAuthStateChanged","auth","Register","email","setEmail","pssw","setPssw","user","setUser","currentUser","window","location","href","register","then","logData","error","fetch","method","headers","body","JSON","stringify","username","password","uid","event","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,8BAAT,EAAyCC,kBAAzC,QAAmE,eAAnE;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAEA,MAAMC,QAAQ,GAAG,YAAW;AAAA;;AAE1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC,CAL0B,CAO1B;;AACA,MAAGG,IAAI,CAACQ,WAAR,EAAqB;AACnBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,YAArB;AACD,GAVyB,CAY1B;;;AACAZ,EAAAA,kBAAkB,CAACC,IAAD,EAAQQ,WAAD,IAAiB;AACtC,QAAGA,WAAH,EAAgB;AACdD,MAAAA,OAAO,CAACC,WAAD,CAAP;AACD;AACJ,GAJiB,CAAlB,CAb0B,CAmB1B;;AACA,iBAAeI,QAAf,GAA0B;AACxB,QAAI;AACF,YAAMd,8BAA8B,CAACE,IAAD,EAAOE,KAAP,EAAcE,IAAd,CAA9B,CAAkDS,IAAlD,CAAuD,MAAM;AAACC,QAAAA,OAAO;AAAI,OAAzE,CAAN;AACD,KAFD,CAEE,OAAMC,KAAN,EAAY,CAAE;;AAAA;AACjB;;AAAA,GAxByB,CA0B1B;;AACA,QAAMD,OAAO,GAAG,YAAY;AACxB;AACAE,IAAAA,KAAK,CAAC,4BAAD,EAA+B;AACpC;AACEC,MAAAA,MAAM,EAAE,MAF0B;AAGlCC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB,kBAFT,CAE2B;;AAF3B,OAHyB;AAOlCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBC,QAAAA,QAAQ,EAAEtB,IAAI,CAACQ,WAAL,CAAiBN,KADN;AACY;AACjCqB,QAAAA,QAAQ,EAAEvB,IAAI,CAACQ,WAAL,CAAiBgB,GAFN,CAES;;AAFT,OAAf;AAP4B,KAA/B,CAAL;AAYH,GAdD;;AAgBA,sBACE;AAAA,4BACE;AAAO,MAAA,WAAW,EAAC,mBAAnB;AAAuC,MAAA,QAAQ,EAAGC,KAAD,IAAW;AAC1DtB,QAAAA,QAAQ,CAACsB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,YADF,eAGa;AAAA;AAAA;AAAA;AAAA,YAHb,eAGkB;AAAA;AAAA;AAAA;AAAA,YAHlB,eAIE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAAC,sBAAnC;AAA0D,MAAA,QAAQ,EAAGF,KAAD,IAAW;AAC7EpB,QAAAA,OAAO,CAACoB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,YAJF,eAMa;AAAA;AAAA;AAAA;AAAA,YANb,eAMkB;AAAA;AAAA;AAAA;AAAA,YANlB,eAOE;AAAQ,MAAA,OAAO,EAAEf,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAtDD;;GAAMX,Q;;KAAAA,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport { createUserWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './firebase-config';\n\nconst Register = function() {\n\n  //Hooks to set email, password and user\n  const [email, setEmail] = useState('');\n  const [pssw, setPssw] = useState('');\n  const [user, setUser] = useState({});\n\n  //Checks if user is authenticated and changes route\n  if(auth.currentUser) {\n    window.location.href='/dashboard'\n  }\n\n  //Check if user changed and update it\n  onAuthStateChanged(auth, (currentUser) => {\n      if(currentUser) {\n        setUser(currentUser);\n      }\n  });\n\n  //Register user when entering email and password\n  async function register() {\n    try {\n      await createUserWithEmailAndPassword(auth, email, pssw).then(() => {logData();});\n    } catch(error){};\n  };\n\n  //fetch function to post email and password from user\n  const logData = async () => {\n      //fetch request from local API on port 5000\n      fetch(\"http://127.0.0.1:5000/post\", {\n      //fetch(\"http://64.227.109.201/phpmyadmin/logData.php\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          \"Content-Type\": \"application/json\"//Header to specify JSON format\n        },\n        body: JSON.stringify({\n        username: auth.currentUser.email,//get user email from currentUser\n        password: auth.currentUser.uid//get UID from currentUser\n      })\n      });\n  };\n\n  return (\n    <div>\n      <input placeholder=\"Ingresa tu e-mail\" onChange={(event) => {\n        setEmail(event.target.value);\n      }}></input><br/><br/>\n      <input type=\"password\" placeholder=\"Ingresa una password\" onChange={(event) => {\n        setPssw(event.target.value);\n      }}></input><br/><br/>\n      <button onClick={register}>Register User</button>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}